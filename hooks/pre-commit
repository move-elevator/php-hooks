#!/usr/bin/env php
<?php

if (false === function_exists('exec')) {
    throw new \RuntimeException('The function "exec" must be enabled!');
}

/**
 * @return string
 */
function getLoaderPath() {
    $loader = __DIR__ . '/../../../autoload.php';

    if (is_readable($loader)) {
        return $loader = __DIR__ . '/../../../autoload.php';
    }

    return $loader = __DIR__ . '/../vendor/autoload.php';
}

$loader = getLoaderPath();

if (false === file_exists($loader)) {
    throw new \Exception("Please do composer install first!");
}

require $loader;

use PhpHooks\Utility\GitUtility;
use PhpHooks\Application;
use Symfony\Component\Yaml\Yaml;

$app = new Application();
$app->setFiles(GitUtility::extractFiles());

$configurationFile = GitUtility::getGitDir() . DIRECTORY_SEPARATOR . '.pre-commit.yml';
$configurationOverwriteFile = GitUtility::getGitDir() . DIRECTORY_SEPARATOR . '.pre-commit-overwrite.yml';

if (file_exists($configurationFile)) {
    $configuration = Yaml::parse(file_get_contents($configurationFile));
    $app->getConfiguration()->merge($configuration);
}

if (file_exists($configurationOverwriteFile)) {
    $configurationOverwrite = Yaml::parse(file_get_contents($configurationOverwriteFile));
    $app->getConfiguration()->merge($configurationOverwrite);
}

$app->run();
